---

- name: verify
  hosts: all
  tasks:

    # -------------------------------------------------------------------------
    # load vars
    # -------------------------------------------------------------------------

    - name: include main vars
      ansible.builtin.include_vars: ../../vars/main.yml

    - name: include OS-specific vars
      ansible.builtin.include_vars: >-
        {{ lookup("ansible.builtin.first_found", params) }}
      vars:
        params:
          files: >-
            {{
              __ssh_first_found |
                map('regex_replace', '$', '.yml') |
                list
            }}
          paths: ../../vars

    # -------------------------------------------------------------------------
    # check package
    # -------------------------------------------------------------------------

    - name: check package installation
      ansible.builtin.package:
        name: '{{ __ssh_packages }}'
        state: present
      check_mode: yes
      register: __ssh_installed

    - name: debug package installation
      ansible.builtin.debug:
        var: __ssh_installed

    - name: assert on package installation
      ansible.builtin.assert:
        that:
          - not __ssh_installed.failed
          - not __ssh_installed.changed
        success_msg: 'package is installed'

    # -------------------------------------------------------------------------
    # check service
    # -------------------------------------------------------------------------

    - name: check service
      ansible.builtin.service:
        name: sshd
        enabled: yes
        state: started
      check_mode: yes
      register: __ssh_service

    - name: debug service
      ansible.builtin.debug:
        var: __ssh_service

    - name: assert on service
      ansible.builtin.assert:
        that:
          - not __ssh_service.failed
          - not __ssh_service.changed
          - __ssh_service.state == 'started'
          - __ssh_service.enabled
        success_msg: 'service is both enabled and started'

    # -------------------------------------------------------------------------
    # check config
    # -------------------------------------------------------------------------

    - name: 'get active sshd config with `sshd -T`'
      ansible.builtin.command: sshd -T
      become: yes
      changed_when: no
      register: __ssh_sshd_t

    - name: 'show `sshd -T` command result'
      ansible.builtin.debug:
        var: __ssh_sshd_t

    - name: 'assert on `sshd -T`'
      ansible.builtin.assert:
        that:
          - not __ssh_sshd_t.failed
          - >-
            __ssh_sshd_t.stdout_lines |
              select('search', '^ciphers aes256-gcm@openssh.com,aes256-ctr$') |
              list |
              length > 0
          - >-
            __ssh_sshd_t.stdout_lines |
              select('search', '^macs hmac-sha2-512-etm@openssh.com$') |
              list |
              length > 0
        success_msg: 'sshd config looks good'

...
