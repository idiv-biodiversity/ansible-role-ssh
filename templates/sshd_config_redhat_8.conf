# {{ ansible_managed }}

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

{% if ssh_host_keys is defined %}
{% for key in ssh_host_keys %}
HostKey {{ key }}
{% endfor %}
{% else %}
HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
{% endif %}
{% if ssh_host_key_algorithms is defined %}

HostKeyAlgorithms {{ ssh_host_key_algorithms | join(',') }}
{% endif %}

# Ciphers and keying
#RekeyLimit default none

# This system is following system-wide crypto policy. The changes to
# crypto properties (Ciphers, MACs, ...) will not have any effect here.
# They will be overridden by command-line options passed to the server
# on command line.
# Please, check manual pages for update-crypto-policies(8) and sshd_config(5).
{% if ssh_ciphers is defined %}
Ciphers {{ ssh_ciphers | join(',') }}
{% endif %}
{% if ssh_kex_algorithms is defined %}
KexAlgorithms {{ ssh_kex_algorithms | join(',') }}
{% endif %}
{% if ssh_macs is defined %}
MACs {{ ssh_macs | join(',') }}
{% endif %}

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
{% if ssh_log_level is defined %}
LogLevel {{ ssh_log_level }}
{% else %}
#LogLevel INFO
{% endif %}

# Authentication:

#LoginGraceTime 2m
{% if ssh_permit_root_login is defined %}
PermitRootLogin {{ ssh_permit_root_login }}
{% else %}
#PermitRootLogin yes
{% endif %}
{% if ssh_strict_modes is defined %}
StrictModes {{ ssh_strict_modes | ternary('yes', 'no') }}
{% else %}
#StrictModes yes
{% endif %}
#MaxAuthTries 6
#MaxSessions 10

{% if ssh_pubkey_authentication is defined %}
PubkeyAuthentication {{ ssh_pubkey_authentication | ternary('yes', 'no') }}
{% else %}
#PubkeyAuthentication yes
{% endif %}
{% if ssh_pubkey_accepted_key_types is defined %}
PubkeyAcceptedKeyTypes {{ ssh_pubkey_accepted_key_types | join(',') }}
{% endif %}

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
{% if ssh_password_authentication is defined %}
PasswordAuthentication {{ ssh_password_authentication | ternary('yes', 'no') }}
{% else %}
PasswordAuthentication yes
{% endif %}
{% if ssh_permit_empty_password is defined %}
PermitEmptyPasswords {{ ssh_permit_empty_password | ternary('yes', 'no') }}
{% else %}
#PermitEmptyPasswords no
{% endif %}

# Change to no to disable s/key passwords
{% if ssh_challenge_response_authentication is defined %}
ChallengeResponseAuthentication {{ ssh_challenge_response_authentication | ternary('yes', 'no') }}
{% else %}
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no
{% endif %}

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
{% if ssh_gssapi_authentication is defined %}
GSSAPIAuthentication {{ ssh_gssapi_authentication | ternary('yes', 'no') }}
{% else %}
GSSAPIAuthentication yes
{% endif %}
{% if ssh_gssapi_cleanup_credentials is defined %}
GSSAPICleanupCredentials {{ ssh_gssapi_cleanup_credentials | ternary('yes', 'no') }}
{% else %}
GSSAPICleanupCredentials no
{% endif %}
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

{% if ssh_agent_forwarding is defined %}
AllowAgentForwarding {{ ssh_agent_forwarding | ternary('yes', 'no') }}
{% else %}
#AllowAgentForwarding yes
{% endif %}
{% if ssh_tcp_forwarding is defined %}
AllowTcpForwarding {{ ssh_tcp_forwarding | ternary('yes', 'no') }}
{% else %}
#AllowTcpForwarding yes
{% endif %}
#GatewayPorts no
{% if ssh_x11_forwarding is defined %}
X11Forwarding {{ ssh_x11_forwarding | ternary('yes', 'no') }}
{% else %}
X11Forwarding yes
{% endif %}
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

{% if ssh_banner is defined and ssh_banner.dest is defined %}
Banner {{ ssh_banner.dest }}
{% else %}
# no default banner path
#Banner none
{% endif %}

{% if ssh_accept_env is defined %}
{% for env in ssh_accept_env %}
AcceptEnv {{ env }}
{% endfor %}
{% else %}
# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS
{% endif %}

{% if ssh_subsystems is defined %}
{% if ssh_subsystems | length %}

{% for subsystem in ssh_subsystems %}
Subsystem	{{ subsystem.name }}	{{ subsystem.command }}
{% endfor %}
{% endif %}
{% else %}
# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server
{% endif %}
{% if ssh_users is defined %}
{% if ssh_users %}

{% for user in ssh_users %}
Match User {{ user.name }}
{% if user.settings is defined %}
{% for key, value in user.settings.items() %}
        {{ key }} {{ value }}
{% endfor %}
{% endif %}
{% if user.authorized_keys is defined %}
        AuthorizedKeysFile /etc/ssh/authorized_keys/{{ user.name }}
{% endif %}
{% if not loop.last %}

{% endif %}
{% endfor %}
{% endif %}
{% else %}

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
{% endif %}
